% file: appendix-graph-statespace.tex

\documentclass{article}
\usepackage{graphicx}
\usepackage{tlatex}
\usepackage{color}
\definecolor{boxshade}{gray}{.85}
\setboolean{shading}{true}

\begin{document}
\begin{tla}
----------------------------- MODULE GraphStateSpace -----------------------------
(*
The graph representation of $n$-ary ordered state space and $2D$ state space
used in $CJupiter$ and $Jupiter$, respectively.  
*)
IsSS(G) == \* A graph state space is a digraph with labeled edges.
    /\ G = [node |-> G.node, edge |-> G.edge] \* Digraph with $node$ field and $edge$ field.
    /\ G.node \subseteq (SUBSET Oid) \* Each node represents a document state.
    /\ G.edge \subseteq [from: G.node, to: G.node, cop: Cop] \* Labeled with a $Cop$.

EmptySS == [node |-> {{}}, edge |-> {}]

g (+) h == [node |-> g.node \cup h.node, edge |-> g.edge \cup h.edge]
-----------------------------------------------------------------------------
Locate(cop, ss) == \* Locate the node in $ss$ that matches the context of $cop$.     
    CHOOSE n \in ss.node : n = cop.ctx \* \textsc{theorem}: Existence of $n$.

xForm(NextEdge(_, _, _), r, cop, ss) == \* Transform $cop$ with an operation sequence 
    LET u == Locate(cop, ss)            \* in state space $ss$ at replica $r$; see Figure~\ref{fig:xform-graphstatespace}.
        v == u \cup {cop.oid}
        RECURSIVE xFormHelper(_, _, _, _)
        xFormHelper(uh, vh, coph, xss) == 
            IF uh = ds[r] 
            THEN [xcop |-> coph, \* transformed $cop$
                  xss |-> xss,   \* extra $ss$ created during transformation
                  lss |-> [node |-> {vh}, \* the last piece of $xss$
                           edge |-> {[from |-> uh, to |-> vh, cop |-> coph]}]]
            ELSE LET e == NextEdge(r, uh, ss)
                     copprime == e.cop
                     uprime == e.to
                     vprime == vh \cup {copprime.oid}
                      coph2copprime == COT(coph, copprime)
                     copprime2coph == COT(copprime, coph)
                 IN  xFormHelper(uprime, vprime, coph2copprime,
                        xss (+) [node |-> {vprime},
                                 edge |-> {[from |-> vh, to |-> vprime, 
                                             cop |-> copprime2coph], 
                                           [from |-> uprime, to |-> vprime, 
                                             cop |-> coph2copprime]}])
    IN  xFormHelper(u, v, cop, [node |-> {v}, 
                                edge |-> {[from |-> u, to |-> v, cop |-> cop]}])  

xFormCopCops(cop, cops) == \* Transform $cop$ against $cops$ on state space.
    LET RECURSIVE xFormCopCopsSSHelper(_, _, _) 
        xFormCopCopsSSHelper(coph, copsh, xss) == 
            LET u == coph.ctx
                v == u \cup {coph.oid}
             uvSS == [node |-> {u, v}, 
                      edge |-> {[from |-> u, to |-> v, cop |-> coph]}]
             IN IF copsh = <<>> THEN [xcop |-> coph, 
                                       xss |-> xss (+) uvSS, lss |-> uvSS]
                ELSE LET copprimeh == Head(copsh)
                            uprime == u \cup {copprimeh.oid}
                            vprime == u \cup {coph.oid, copprimeh.oid}
                         coph2copprimeh == COT(coph, copprimeh)
                         copprimeh2coph == COT(copprimeh, coph)
                      IN xFormCopCopsSSHelper(coph2copprimeh, 
                            Tail(copsh),
                            xss (+) [node |-> {u, v}, 
                                     edge |-> {[from |-> u, to |-> v, cop |-> coph],
                                               [from |-> u, to |-> uprime, 
                                                 cop |-> copprimeh],
                                               [from |-> v, to |-> vprime, 
                                                 cop |-> copprimeh2coph]}])
    IN  xFormCopCopsSSHelper(cop, cops, EmptySS)

xFormCopCopsShift(cop, cops, shift) == 
                    \* shifting the first $shift$ elements out of $cops$
    xFormCopCops(cop, SubSeq(cops, shift + 1, Len(cops)))
=============================================================================
\end{tla}
\begin{tlatex}
\@x{}\moduleLeftDash\@xx{ {\MODULE} GraphStateSpace}\moduleRightDash\@xx{}%
\begin{lcom}{0}%
\begin{cpar}{0}{F}{F}{0}{0}{}%
  
 The graph representation of $n$-ary ordered state space and $2D$ state space
 used in $CJupiter$ and $Jupiter$, respectively.  
 
\end{cpar}%
\end{lcom}%
\@x{ IsSS ( G ) \.{\defeq}}%
\@y{%
  A graph state space is a digraph with labeled edges.
}%
\@xx{}%
 \@x{\@s{20.38} \.{\land} G \.{=} [ node \.{\mapsto} G . node ,\, edge
 \.{\mapsto} G . edge ]}%
\@y{%
  Digraph with $node$ field and $edge$ field.
}%
\@xx{}%
\@x{\@s{20.38} \.{\land} G . node \.{\subseteq} ( {\SUBSET} Oid )}%
\@y{%
  Each node represents a document state.
}%
\@xx{}%
 \@x{\@s{20.38} \.{\land} G . edge\@s{1.53} \.{\subseteq} [ from \.{:} G .
 node ,\, to \.{:} G . node ,\, cop \.{:} Cop ]}%
\@y{%
  Labeled with a $Cop$.
}%
\@xx{}%
\@pvspace{8.0pt}%
 \@x{ EmptySS \.{\defeq} [ node \.{\mapsto} \{ \{ \} \} ,\, edge \.{\mapsto}
 \{ \} ]}%
\@pvspace{8.0pt}%
 \@x{ g \.{\oplus} h\@s{17.10} \.{\defeq} [ node \.{\mapsto} g . node \.{\cup}
 h . node ,\, edge \.{\mapsto} g . edge \.{\cup} h . edge ]}%
\@x{}\midbar\@xx{}%
\@x{ Locate ( cop ,\, ss ) \.{\defeq}}%
\@y{%
  Locate the node in $ss$ that matches the context of $cop$.     
}%
\@xx{}%
\@x{\@s{16.4} {\CHOOSE} n \.{\in} ss . node \.{:} n \.{=} cop . ctx}%
\@y{%
  \textsc{theorem}: Existence of $n$.
}%
\@xx{}%
\@pvspace{8.0pt}%
\@x{ xForm ( NextEdge ( \_ ,\, \_ ,\, \_ ) ,\, r ,\, cop ,\, ss ) \.{\defeq}}%
\@y{%
  Transform $cop$ with an operation sequence 
}%
\@xx{}%
\@x{\@s{16.4} \.{\LET} u \.{\defeq} Locate ( cop ,\, ss )\@s{50.35}}%
\@y{%
 in state space $ss$ at replica $r$; see
 Figure~\ref{fig:xform-graphstatespace}.
}%
\@xx{}%
\@x{\@s{36.79} v\@s{0.45} \.{\defeq} u \.{\cup} \{ cop . oid \}}%
\@x{\@s{36.79} {\RECURSIVE} xFormHelper ( \_ ,\, \_ ,\, \_ ,\, \_ )}%
\@x{\@s{40.89} xFormHelper ( uh ,\, vh ,\, coph ,\, xss ) \.{\defeq}}%
\@x{\@s{57.29} {\IF} uh \.{=} ds [ r ]}%
\@x{\@s{57.29} \.{\THEN} [ xcop \.{\mapsto} coph ,\,}%
\@y{%
  transformed $cop$
}%
\@xx{}%
\@x{\@s{91.38} xss \.{\mapsto} xss ,\,\@s{12.49}}%
\@y{%
  extra $ss$ created during transformation
}%
\@xx{}%
\@x{\@s{91.38} lss\@s{2.08} \.{\mapsto} [ node \.{\mapsto} \{ vh \} ,\,}%
\@y{%
  the last piece of $xss$
}%
\@xx{}%
 \@x{\@s{123.35} edge\@s{1.53} \.{\mapsto} \{ [ from \.{\mapsto} uh ,\, to
 \.{\mapsto} vh ,\, cop \.{\mapsto} coph ] \} ] ]}%
\@x{\@s{57.29} \.{\ELSE} \.{\LET} e \.{\defeq} NextEdge ( r ,\, uh ,\, ss )}%
\@x{\@s{109.01} copprime \.{\defeq} e . cop}%
\@x{\@s{109.01} uprime \.{\defeq} e . to}%
\@x{\@s{109.01} vprime\@s{0.76} \.{\defeq} vh \.{\cup} \{ copprime . oid \}}%
\@x{\@s{113.11} coph2copprime \.{\defeq} COT ( coph ,\, copprime )}%
\@x{\@s{113.11} copprime2coph \.{\defeq} COT ( copprime ,\, coph )}%
 \@x{\@s{88.61} \.{\IN}\@s{4.09} xFormHelper ( uprime ,\, vprime ,\,
 coph2copprime ,\,}%
\@x{\@s{125.41} xss \.{\oplus} [ node \.{\mapsto} \{ vprime \} ,\,}%
 \@x{\@s{154.04} edge\@s{1.53} \.{\mapsto} \{ [ from \.{\mapsto} vh ,\, to
 \.{\mapsto} vprime ,\,}%
\@x{\@s{202.16} cop\@s{1.78} \.{\mapsto} copprime2coph ] ,\,}%
\@x{\@s{195.28} [ from \.{\mapsto} uprime ,\, to \.{\mapsto} vprime ,\,}%
\@x{\@s{202.16} cop\@s{1.78} \.{\mapsto} coph2copprime ] \} ] )}%
 \@x{\@s{16.4} \.{\IN}\@s{4.09} xFormHelper ( u ,\, v ,\, cop ,\, [ node
 \.{\mapsto} \{ v \} ,\,}%
 \@x{\@s{149.63} edge\@s{1.53} \.{\mapsto} \{ [ from \.{\mapsto} u ,\, to
 \.{\mapsto} v ,\, cop \.{\mapsto} cop ] \} ] )}%
\@pvspace{8.0pt}%
\@x{ xFormCopCops ( cop ,\, cops ) \.{\defeq}}%
\@y{%
  Transform $cop$ against $cops$ on state space.
}%
\@xx{}%
 \@x{\@s{16.4} \.{\LET} {\RECURSIVE} xFormCopCopsSSHelper ( \_ ,\, \_ ,\, \_
 )}%
\@x{\@s{40.89} xFormCopCopsSSHelper ( coph ,\, copsh ,\, xss ) \.{\defeq}}%
\@x{\@s{57.29} \.{\LET} u \.{\defeq} coph . ctx}%
\@x{\@s{77.69} v\@s{0.45} \.{\defeq} u \.{\cup} \{ coph . oid \}}%
\@x{\@s{61.39} uvSS\@s{0.02} \.{\defeq} [ node \.{\mapsto} \{ u ,\, v \} ,\,}%
 \@x{\@s{105.49} edge\@s{1.53} \.{\mapsto} \{ [ from \.{\mapsto} u ,\, to
 \.{\mapsto} v ,\, cop \.{\mapsto} coph ] \} ]}%
 \@x{\@s{61.39} \.{\IN} {\IF} copsh \.{=} {\langle} {\rangle} \.{\THEN} [ xcop
 \.{\mapsto} coph ,\,}%
 \@x{\@s{177.53} xss\@s{1.84} \.{\mapsto} xss \.{\oplus} uvSS ,\, lss
 \.{\mapsto} uvSS ]}%
\@x{\@s{81.79} \.{\ELSE} \.{\LET} copprimeh \.{\defeq} Head ( copsh )}%
\@x{\@s{145.81} uprime\@s{1.77} \.{\defeq} u \.{\cup} \{ copprimeh . oid \}}%
 \@x{\@s{145.81} vprime\@s{2.53} \.{\defeq} u \.{\cup} \{ coph . oid ,\,
 copprimeh . oid \}}%
 \@x{\@s{133.51} coph2copprimeh\@s{4.10} \.{\defeq} COT ( coph ,\, copprimeh
 )}%
\@x{\@s{137.61} copprimeh2coph \.{\defeq} COT ( copprimeh ,\, coph )}%
\@x{\@s{117.21} \.{\IN} xFormCopCopsSSHelper ( coph2copprimeh ,\,}%
\@x{\@s{149.91} Tail ( copsh ) ,\,}%
\@x{\@s{149.91} xss \.{\oplus} [ node \.{\mapsto} \{ u ,\, v \} ,\,}%
 \@x{\@s{178.54} edge\@s{1.53} \.{\mapsto} \{ [ from \.{\mapsto} u ,\, to
 \.{\mapsto} v ,\, cop \.{\mapsto} coph ] ,\,}%
\@x{\@s{219.78} [ from \.{\mapsto} u ,\, to \.{\mapsto} uprime ,\,}%
\@x{\@s{226.66} cop\@s{1.78} \.{\mapsto} copprimeh ] ,\,}%
\@x{\@s{219.78} [ from \.{\mapsto} v ,\, to \.{\mapsto} vprime ,\,}%
\@x{\@s{226.66} cop\@s{1.78} \.{\mapsto} copprimeh2coph ] \} ] )}%
 \@x{\@s{16.4} \.{\IN}\@s{4.09} xFormCopCopsSSHelper ( cop ,\, cops ,\,
 EmptySS )}%
\@pvspace{8.0pt}%
\@x{ xFormCopCopsShift ( cop ,\, cops ,\, shift ) \.{\defeq}}%
\@x{\@s{99.97}}%
\@y{%
  shifting the first $shift$ elements out of $cops$
}%
\@xx{}%
 \@x{\@s{16.4} xFormCopCops ( cop ,\, SubSeq ( cops ,\, shift \.{+} 1 ,\, Len
 ( cops ) ) )}%
\@x{}\bottombar\@xx{}%
\end{tlatex}
\end{document}
